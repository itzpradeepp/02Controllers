apiVersion: apps/v1
kind: Deployment
metadata: 
  name: springdep
  namespace: test-ns
spec:
  replicas: 4
  strategy:
    type: RollingUpadte
    rollingUpdate:
      maxSurge: 2
      maxAvailable: 2
  minReadySeconds: 30
  selector:
    matchLabels:
      app: spring
  template:
    metadata:
      name: springpod
      labels:
        app: spring 
    spec: 
      containers:
      - name: springcont
        image: dockerhandson/spring-boot-mongo:1
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        env:
        - name: MONGO_DB_HOSTNAME
          value:
        - name: MONGO_DB_USERNAME
          value:
        - name: MONGO_DB_PASSWORD
          value: 
---
apiVersion: v1 
kind: Service
metadata: 
  name: springsvc
  namespace: test-ns
spec:
  type: NodePort
  selector:
    app: spring
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: ReplicaSet
metadata: 
  name: mongoreplica
  namespace: test-ns
spec:
  selector: 
    matchLabels: 
      app: mongo
  template:
    metadata: 
      name: mongopod 
      labels:
        app: mongo
    spec:
      containers:
      - name: mongocont
        image: mongo
        ports:
        - containerPort: 27017
        resources: 
          requests:
            cpu:
            memory:
          limits:
            cpu:
            memory:
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: devdb
        - name:  MONGO_INITDB_ROOT_PASSWORD
          value: devdb@123
---
apiVersion: v1 
kind: Service
metadata:  
  name: mongosvc
  namespace: test-ns
spec:
  type: ClusterIP
  selector:
    app: mongo
  ports:
  - port: 27017
    targetPort: 27017